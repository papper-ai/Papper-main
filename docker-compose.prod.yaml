version: '3.9'

services:
  redis:
    container_name: papper-main-redis
    image: redis:latest
    networks:
      - papper-main-service-network
    ports:
      - "6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 1m
      timeout: 30s
      retries: 3
      start_period: 1m

  main-service:
    container_name: papper-main-service
    build:
      context: .
      dockerfile: docker/prod.Dockerfile
    networks:
      - papper-main-service-network
      - papper-backend
    ports:
      - ${MAIN_SERVICE_PORT:-8090}:8000
    restart: unless-stopped
    environment:
      - VAULT_SERVICE_HOST=${VAULT_SERVICE_HOST}
      - VAULT_SERVICE_PORT=${VAULT_SERVICE_PORT:-8000}
      - GRAPH_RAG_SERVICE_HOST=${GRAPH_RAG_SERVICE_HOST}
      - GRAPH_RAG_SERVICE_PORT=${GRAPH_RAG_SERVICE_PORT:-8000}
      - VECTOR_RAG_SERVICE_HOST=${VECTOR_RAG_SERVICE_HOST}
      - VECTOR_RAG_SERVICE_PORT=${VECTOR_RAG_SERVICE_PORT:-8000}
      - CHATS_SERVICE_HOST=${CHATS_SERVICE_HOST}
      - CHATS_SERVICE_PORT=${CHATS_SERVICE_PORT:-8000}
      - HISTORY_SERVICE_HOST=${HISTORY_SERVICE_HOST}
      - HISTORY_SERVICE_PORT=${HISTORY_SERVICE_PORT:-8000}
      - AUTH_SERVICE_HOST=${AUTH_SERVICE_HOST}
      - AUTH_SERVICE_PORT=${AUTH_SERVICE_PORT:-8000}
      - REDIS_HOST=papper-main-redis
      - REDIS_PORT=6379
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/api/health" ]
      interval: 1m
      timeout: 30s
      retries: 3
      start_period: 30s
    depends_on:
      redis:
        condition: service_healthy


networks:
  papper-main-service-network:
    name: papper-main-service-network
  papper-backend:
    name: papper-backend
    external: true
